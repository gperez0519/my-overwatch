import { PersistenceAdapter } from 'ask-sdk-core';
import { RequestEnvelope } from 'ask-sdk-model';
import { S3 } from 'aws-sdk';
import { ObjectKeyGenerator } from './ObjectKeyGenerators';
/**
 * Implementation of {@link PersistenceAdapter} using AWS S3
 */
export declare class S3PersistenceAdapter implements PersistenceAdapter {
    protected bucketName: string;
    protected s3Client: S3;
    protected objectKeyGenerator: ObjectKeyGenerator;
    protected pathPrefix: string;
    constructor(config: {
        bucketName: string;
        s3Client?: S3;
        objectKeyGenerator?: ObjectKeyGenerator;
        pathPrefix?: string;
    });
    /**
     * Retrieves persistence attributes from AWS S3.
     * @param {RequestEnvelope} requestEnvelope Request envelope used to generate object key.
     * @returns {Promise<Object.<string, any>>}
     */
    getAttributes(requestEnvelope: RequestEnvelope): Promise<{
        [key: string]: string;
    }>;
    /**
     * Saves persistence attributes to AWS S3.
     * @param {RequestEnvelope} requestEnvelope Request envelope used to generate object key.
     * @param {Object.<string, any>} attributes Attributes to be saved to DynamoDB.
     * @return {Promise<void>}
     */
    saveAttributes(requestEnvelope: RequestEnvelope, attributes: {
        [key: string]: string;
    }): Promise<void>;
    deleteAttributes(requestEnvelope: RequestEnvelope): Promise<void>;
}
